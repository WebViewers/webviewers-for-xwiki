{{groovy}}
// Iterate over attachments which are added to this document
// For each attachment which ends in .zip, assume it contains
// a render.js package and create a macro which spawns the
// render.js gadget.
//
for (Object att : doc.getAttachmentList()) {
    if (!att.getFilename().endsWith(".zip")) { continue; }
    def name = att.getFilename().replaceAll(".zip", "");

    def d = xwiki.getDocument(doc.getSpace(), name);
    if (!d.isNew()) { continue; }
    def o = d.getObject("XWiki.WikiMacroClass", true);
    o.set('id', name);
    o.set('name', name);
    o.set('description', 'Resilience macro imported from ' + att.getFilename());
    o.set('defaultCategory', 'resiliance');
    o.set('supportsInlineMode', 0);
//    o.set('visibility', ...
    o.set('contentType', 'No content');

    def id = (name + Math.random()).replaceAll('0.', '-');

    o.set('code',
      '{{velocity}}\n' +
        '#set ($id = "$!xcontext.macro.params.id")\n' +
        '#set ($wh = "${xcontext.macro.doc.getSpace()}.WebHome")\n' +
        '#set ($zip = "${xcontext.macro.doc.getName()}.zip")\n' +
        '#if ("$!id" == "")\n' +
          '#set ($id = "widget-$mathtool.getRandom().toString().substring(2)")\n' +
        '#end\n\n' +
        '{{html}}\n' +
          '<div id="$id"\n' +
            'data-gadget="$xwiki.getAttachmentURL($wh, $zip)/index.html"\n' +
            'data-gadget-property="$xcontext.macro.params.property"\n' +
          '/>\n' +
        '{{/html}}\n\n' +
        '$xwiki.jsx.use($res)##\n' +
      '{{/velocity}}\n');

    o = d.getObject("XWiki.WikiMacroParameterClass", true);
    o.set('name', 'property');
    o.set('defaultValue', '{}');

    d.save();
}
{{/groovy}}
